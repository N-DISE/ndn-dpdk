package keychain_test

import (
	"testing"

	"github.com/usnistgov/ndn-dpdk/ndn"
	"github.com/usnistgov/ndn-dpdk/ndn/an"
	"github.com/usnistgov/ndn-dpdk/ndn/keychain"
)

func testSafeBag(t testing.TB, sigType int, certName ndn.Name, wire, passphrase []byte) {
	assert, _ := makeAR(t)

	_, _, e := keychain.ImportSafeBag(wire, []byte{0x01})
	assert.Error(e)

	pvt, cert, e := keychain.ImportSafeBag(wire, passphrase)
	assert.NoError(e)

	nameEqual(assert, keychain.ToKeyName(certName), pvt.Name())
	nameEqual(assert, certName, cert.Name())
}

func TestSafeBagECDSA(t *testing.T) {
	testSafeBag(t, an.SigSha256WithEcdsa,
		ndn.ParseName("/8=E/8=KEY/8=Ap%11%F9%1C%28%DA%DF/8=self/35=%00%00%01z%BA%9B%3C6"),
		bytesFromHex(`
			80FD020F06FD011A072208014508034B45590808417011F91C28DADF0804
			73656C6623080000017ABA9B3C36140918010219040036EE80155B305930
			1306072A8648CE3D020106082A8648CE3D03010703420004224A52FF3C41
			FCF1069E996BA2CF88657A60EF6780D9BF9158621A5121D1E81674069221
			D6C2B3831A602A000BD4A76809ABDFA5C7A97099340ACAC8F147AD231643
			1B01031C14071208014508034B45590808417011F91C28DADFFD00FD26FD
			00FE0F313937303031303154303030303030FD00FF0F3230343130373133
			5431373132353317473045022100C9F7A3B6A1CF10FCD3CE8147E41764EA
			85D09CAA6D7EA6300F77ACAEB09EB7A6022036E8FFE3BB54FD3105C0CDA3
			133320CEFEFE4E44A72B9F742B921F360BB4D4B381EF3081EC305706092A
			864886F70D01050D304A302906092A864886F70D01050C301C04087E0A80
			48BDC0B9B802020800300C06082A864886F70D02090500301D0609608648
			01650304012A0410F59B16CE13F21A4357ABB22F112C957E048190BE0516
			16A1D6CE3F55778F6F10727895F43F5781772DC6A289E1B29FE6897FE8DC
			8CC718DE009780A2EB7B7C9D142D8C09AB617F134B7E73CF5F3CE8EE4782
			4817CFA2B0AC3B6EFDB92C0DDB776409999EE44957A0907873C0287FF18D
			A53A351D58F48266BBFF3024D6FFBD54410DB2511FC718AAEE6167ED5D25
			DE8F0F89C56005138871A8FD2A9B0B8576FDE5BCAA`),
		[]byte("tS5VVFQES"),
	)
	// test vector created with ndn-cxx 0.7.1-39-g74cb28f6
}

func TestSafeBagRSA(t *testing.T) {
	testSafeBag(t, an.SigSha256WithRsa,
		ndn.ParseName("/8=R/8=KEY/8=%84%C5%FF%F6d%DBm%CF/8=self/35=%00%00%01z%BA%96%8E%3A"),
		bytesFromHex(`
			80FD07DB06FD02A2072208015208034B4559080884C5FFF664DB6DCF0804
			73656C6623080000017ABA968E3A140918010219040036EE8015FD012630
			820122300D06092A864886F70D01010105000382010F003082010A028201
			0100B91C2942586A8C6F975AA788D1AEBD441CCA2676F98C3BB3C9F0DF67
			9FD494ACE6BF92DF85ED2D5F1A37A73F8E0CB2F96BDE770692FDEDCF5F60
			DC76A9AF86FBA44B3F136D5250AE4883F3829E3AD1B35EA532963F6C925E
			D59AF41D251708483F0C6064D687526072F35B4331BB5C56C81A4BC764D4
			226D69A94EC826AAD05EB26A92DB8652107ADF864EB7425ED7539135AAEA
			399FF55745419FEA88496D2DDADD1D672AB38EAD26D15EF004ED379D8787
			A08DCDDDE54FEDFA8C6CEBD99AF9343FCA9256F11CFF8959E77786F5F9E8
			E4176DA925589EA14EA9127328A3F49A9179D223EB8BED20C97C4713D98F
			C6852F3F9070328E9D4A6532197530D8AF07020301000116431B01011C14
			071208015208034B4559080884C5FFF664DB6DCFFD00FD26FD00FE0F3139
			37303031303154303030303030FD00FF0F32303431303731335431373037
			343617FD01003FA9184CC4A21D0E5B0F88C928DD99423829DC1F047B94B8
			9B173C726E16AEC790FE63FC78BFA114FC79CCC0188E3923490D32814302
			3D3C793B0A966E0FDA19321F22D0442D76CB1BEB42501C9CE0A3D1AFC985
			10945DDAEB0E2B7BB1FA49B1B3E7CB7AF5F6E3C5CD88EFD60FC7150410CD
			6691248126D8999172FB100A6399C7906698BB58F52C4FAEF9BEF2F82EDC
			8C1FB108D4DC4F57837ABE171C8B69E530AF3FA1F25541731B92E1162ACE
			23494904508ABB0236ACDDDA9E7A85DCEEC30A3AC81E0246BA8B1C5B3EAE
			F72BFA9F836FF051C5AED9E74241D17DDB14FFA11E467A9E7D4DF69C516E
			2E78A5471268FC3372FBBCF2D614EBC9D116743685F881FD05313082052D
			305706092A864886F70D01050D304A302906092A864886F70D01050C301C
			0408C1F9D56D6467255502020800300C06082A864886F70D02090500301D
			060960864801650304012A04106B9F5533323D8C4F4DBCFE7A85A69C8A04
			8204D0C7FABDDCD81490AEF7F4BCFF31DBAD1171DB6915EE07E9A34FDA49
			65115C373FB3D0221E74BC4447C2F035DD9E0B7F2A1360AD4FAD15E31CEB
			0672CF086F2CB72FA6F86C76112143EFC4832B010868E3FE62A3791E05A5
			6BA5515012A969A85D85CFAA2ABAA328E7EE64F5A12FB502E8EE5714AC1A
			D39FA7455A31B7404779289BE6347E1D1FBF3788DC39D759DFBCBDA2DCCA
			24761CC7DE031F4EB0F6C1CD22DDD1734F68760AA31C6511C0EEB2BEE4BD
			A19DCB9FEDDB86B39384AE10D274ED2E26D527CE6E38333EA3172304E463
			775D994AE9152CA1B8076A5C065237441639876DB91A00AC113A6D3C8D1C
			3B98EF0D93A47AEB69F8E8735CAB669D0B4F10BE545E933F9801820A3FFA
			079C4BFDF5697AE31FD4F6CFA6E1AF3BB679C22270F5F462EBA20EAA1ADE
			5ED9E5D65C11E02D519360695AFB6B72996067092BA148A4251143BFC5A9
			0A768B57CE125CE2C696F9BA97E00548724C0825AFC1194E9331E109DB2C
			0FE7AC8DBEEB21136B43D4DD305E3B765E60CB15B0815A56EE615264F794
			A4C73C7C3692CECF05C0A4F3183187A0E5492E114FEC2F5B50435EE2F901
			A183A93641F8F72063C458C53961D3DB6B9E3BCC3F1657CCC727E06F57ED
			33AC0CE95B5B6F111C8CCE61BADBC0A7E85CC567AA31DAF11520504DD02F
			330F5B699C6647161FD37B8C2721A02CD6250079AEBB97275E2F6E776C67
			15493F28CE78AE7BE6ADCEACF228086AE876FB76FFBD63EB0AE1AC179805
			C6B45D2EC8E99667F2EC789C4C3B3B5093DA0F2A072EBBCBDB107B1F0C56
			5A0F204DED9E5421DF2A411FB90A9FEE9DD56F3E7ADFA29921CDD46AEE50
			663699F6B3ED7AA2265AE876001414C4DB3C7138CEF79295A7611D36BEC9
			7CA44CDA9078074106B163CFB85922C1E66811DE7D940CC3BAB01D34D231
			E8A66BD8A8C285324157574E94A4760D6142B8369AE74F604E7E3BBBF068
			8F8B23E4F88F12702C90EE8F5ECDDBE52909A398AD9F3014439CB65121EA
			C4C38948E0E561D9DDDC0BFAEAC784E747CDFD5FD7180822ECA711DBDE74
			7C35362344BF777107DC840315B35B91D9DF40FE21073567724C1F7204AA
			A71E1FC5B90AC37D3FD3E1DF94F2E995ED72AE0E6496D67AAC6DC56BC391
			ACB299A7D711D7CA050DA405662FC161A08948181099F359A87D205929D4
			6EA126ECC11198FD4F5385FADED3319D5AD5A7A64BA30BA3C32B1E1A7263
			554124F19277DFAE54A5FC90B62231249ECEB34EAE7A2CA637164DCDDF61
			8BDFFEA4747355B29B9138CE929B945470F324B101FF9E27B9AB21651C76
			BE36E080996791CD21E181474BB5B1A04F9DA099554266D00CF2A52A6D16
			0A099BDED65AB036EDB4648D44B1F0A12396FE31A23B08D8EB2E09680F6F
			E1220634D50F7EE62CB580432981FCC3E0CBFD02544E8ECC7C663A878B00
			D453FC7ECD49C0CCD7E91F372E829E4D37B8FED4ACF6FD75771F0072F624
			00FB40EC8A719E74EBFAED72C79BCB6291CAA7436CEBA80622BE275DBAEF
			C1456F8ED0DAE7E0281F2EF08DBBA1458C0483D27E8D19A5C3BC9291CCB1
			0D1766367F6DF052C978B4A5A7233DE8D700140DCC73A06D76D722BADF10
			790FE2243CED2F6201E6AF9A38FE3F69B861667DFE01D52672285F2449D1
			4CEDB6F536A6F1B096F3531816EE18F099FC13FE95891507D0D1B9CCCFBB
			9F5BAA8BBE331C0566A5D44FD917BFEB5987B0EA618500C32007E3DDBE26
			E23AF32FDC`),
		[]byte("dyJSpodm"),
	)
	// test vector created with ndn-cxx 0.7.1-39-g74cb28f6
}
