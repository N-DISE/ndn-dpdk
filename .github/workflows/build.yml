---
# yamllint disable rule:line-length rule:truthy

name: build
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        compiler:
          - gcc-7
          - gcc-8
          - clang-8
      fail-fast: false
    env:
      CC: ${{ matrix.compiler }}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ^1
      - uses: actions/setup-node@v2-beta
        with:
          node-version: 14
      - name: install APT dependencies
        run: |
          sudo apt-get update
          sudo apt-get install doxygen gcc-multilib libelf-dev liburcu-dev linux-libc-dev
      - name: install uBPF
        run: |
          mkdir -p $HOME/ubpf
          cd $HOME/ubpf
          curl -sL https://github.com/iovisor/ubpf/archive/$UBPFCOMMIT.tar.gz | tar -xz --strip-components=1
          cd vm
          make
          sudo make install
        env:
          UBPFCOMMIT: 089f6279752adfb01386600d119913403ed326ee
      - uses: actions/cache@v2
        with:
          path: |
            ~/setup-dpdk
          key: ${{ matrix.compiler }}_DPDK2011_SPDK2010
      - uses: yoursunny/setup-dpdk@master
        with:
          dpdk-version: '20.11'
          spdk-version: '20.10'
      - uses: actions/checkout@v2
      - name: build NDN-DPDK in debug mode
        run: |
          npm install
          make
        env:
          NDNDPDK_MK_THREADSLEEP: 1
      - name: run unit tests
        run: |
          MK_GOTEST_FILTER="/${TEST_ACCEPTABLE_FAILURES}/ d" make test
          MK_GOTEST_FILTER="/${TEST_ACCEPTABLE_FAILURES}/! d" make test || true
        env:
          TEST_ACCEPTABLE_FAILURES: diskstore|ethface|fetch|fwdp|memiftransport|tgconsumer|tgproducer
          NDNDPDK_MK_THREADSLEEP: 1
      - name: check code style
        run: make lint && [[ $(git status --porcelain | tee >(cat 1>&2) | wc -l) -eq 0 ]]
      - name: build documentation
        run: make doxygen
  ubuntu20:
    runs-on: ubuntu-20.04
    container: ubuntu:20.04
    defaults:
      run:
        shell: bash
    steps:
      - name: install basics
        run: |
          apt-get -y -qq update
          apt-get -y -qq install curl git sudo
      - uses: actions/checkout@v2
      - name: install dependencies
        run: ./docs/ndndpdk-depends.sh --skiprootcheck -y
      - name: build NDN-DPDK in release mode
        run: |
          source ~/.bashrc
          npm install
          NDNDPDK_MK_RELEASE=1 make
          sudo make install
  docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v2
        with:
          context: .
