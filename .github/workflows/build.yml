---
# yamllint disable rule:line-length

name: build
"on":
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        compiler:
          - gcc-7
          - gcc-8
          - clang-8
      fail-fast: false
    env:
      CC: ${{ matrix.compiler }}
    steps:
      - id: make-cache-key
        run: |
          echo "::set-output name=cpuflags::$(lscpu -J | jq -r '.lscpu[] | select(.field=="Flags:") | .data | gsub("[^a-z0-9]"; "")')"
      - uses: actions/cache@v2
        with:
          path: |
            ~/setup-dpdk.cache.*
          key: ${{ matrix.compiler }}-${{ steps.make-cache-key.outputs.cpuflags }}
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.15"
      - uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: install APT dependencies
        run: |
          sudo apt-get update
          sudo apt-get install doxygen gcc-8 gcc-multilib libelf-dev liburcu-dev linux-libc-dev
      - uses: yoursunny/setup-dpdk@master
        with:
          dpdk-version: "20.08"
          spdk-version: "20.07"
      - name: install jsonrpc2client
        run: |
          curl -L https://github.com/powerman/rpc-codec/releases/download/v1.1.3/jsonrpc2client-linux-x86_64 | \
            sudo install /dev/stdin /usr/local/bin/jsonrpc2client
      - name: install uBPF
        run: |
          mkdir -p $GITHUB_WORKSPACE/ubpf
          cd $GITHUB_WORKSPACE/ubpf
          curl -sL https://github.com/iovisor/ubpf/archive/$UBPFCOMMIT.tar.gz | tar -xz --strip-components=1
          cd vm
          make
          sudo make install
        env:
          UBPFCOMMIT: "089f6279752adfb01386600d119913403ed326ee"
      - uses: actions/checkout@v2
      - name: build NDN-DPDK in debug mode
        run: |
          npm install
          make
      - name: run unit tests
        run: |
          MK_GOTEST_FILTER="/${TEST_ACCEPTABLE_FAILURES}/ d" make test
          MK_GOTEST_FILTER="/${TEST_ACCEPTABLE_FAILURES}/! d" make test || true
        env:
          TEST_ACCEPTABLE_FAILURES: "diskstore|ethface|fetch|fwdp|memiftransport|tgconsumer|tgproducer"
      - name: build NDN-DPDK in release mode
        run: |
          make clean
          RELEASE=1 make
          sudo make install
      - name: check code style
        run: make lint && [[ $(git status --porcelain | tee /dev/stderr | wc -l) -eq 0 ]]
      - name: build documentation
        run: make doxygen schema
  docker:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          repository: ndn-dpdk
          push: false
